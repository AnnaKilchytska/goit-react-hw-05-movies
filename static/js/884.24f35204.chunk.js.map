{"version":3,"file":"static/js/884.24f35204.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { StyledMovieDetails, StyledNavLink } from 'components/App.styled';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/api';\n\nfunction MovieDetails() {\n  const [image, setImage] = useState('');\n  const [title, setTitle] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [description, setDescription] = useState('');\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const imageBaseURL = `https://image.tmdb.org/t/p/original`;\n    async function getMovie(id) {\n      const movie = await fetchMoviesById(id);\n      console.log(movie);\n\n      //   const imageBaseURL = await getImages();\n      //   console.log(imageBaseURL);\n\n      const { data } = movie;\n      setImage(`${imageBaseURL}${data.poster_path}`);\n      setTitle(data.title);\n      setDescription(data.overview);\n      setReleaseDate(data.release_date.slice(0, 4));\n      setGenres(data.genres.map(genre => genre.name));\n    }\n    getMovie(id);\n  }, [id]);\n\n  return (\n    <StyledMovieDetails>\n      <div className=\"backLink\">\n        <StyledNavLink to={location.state?.from ?? '/'}>\n          &#8592; Back to movies list\n        </StyledNavLink>\n      </div>\n      <div className=\"main-detailes\">\n        <img src={image} width=\"370px\" alt={title} />\n\n        <div>\n          <h2>\n            {title} <span>({releaseDate})</span>\n          </h2>\n          <p>{description}</p>\n          <ul>\n            {genres.map((g, i) => (\n              <li key={i}>{g}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"additional\">\n        <h3>Additional information:</h3>\n        <ul>\n          <li>\n            <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </StyledMovieDetails>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '5e62b2453973c629f1496ace3a4b7719';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularFilms = async (page = 1) => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.dir(error);\n  }\n};\n\nexport const fetchMoviesById = async id => {\n  try {\n    const data = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMoviesByQuery = async query => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    console.log('api cast', data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    console.log('api reviews', data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const getImages = async () => {\n//   try {\n//     const data = await fetch(\n//       `https://api.themoviedb.org/3/configuration?api_key=${API_KEY}`\n//     );\n//     const parcedData = await data.json();\n//     const { images } = parcedData;\n\n//     const imageBaseURL = `${images.secure_base_url}${\n//       images.profile_sizes[images.profile_sizes.length - 1]\n//     }`;\n//     return imageBaseURL;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n"],"names":["useState","image","setImage","title","setTitle","releaseDate","setReleaseDate","genres","setGenres","description","setDescription","id","useParams","location","useLocation","useEffect","imageBaseURL","fetchMoviesById","movie","console","log","data","poster_path","overview","release_date","slice","map","genre","name","getMovie","className","to","state","from","src","width","alt","g","i","Suspense","fallback","API_KEY","BASE_URL","fetchPopularFilms","page","axios","dir","searchMoviesByQuery","query","getCredits","fetchReviews"],"sourceRoot":""}